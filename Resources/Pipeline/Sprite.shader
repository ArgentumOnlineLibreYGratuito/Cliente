////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// [DEFINITIONS]
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

cbuffer cbScene    : register(b0)
{
	float4x4 u_Camera;
}

struct VsParameters
{
	float3 Position : ATTRIBUTE0;
	float4 Color    : ATTRIBUTE1;
	float2 Texture  : ATTRIBUTE2;
};

struct FsParameters
{
	float4 Position : SV_POSITION;
	float4 Color    : COLOR;
	float2 Texture  : TEXCOORD0;
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// [RESOURCES]
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Texture2D    iChannel0          : register(s0);
SamplerState iChannel0Sampler;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// [VERTEX]
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

FsParameters vertex(VsParameters Input)
{
    FsParameters Output;

    Output.Position = mul(u_Camera, float4(Input.Position,  1));
    Output.Color    = Input.Color;
    Output.Texture  = Input.Texture;

    return Output;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// [FRAGMENT]
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

float4 fragment(FsParameters Input) : SV_Target
{
	float4 Texel = iChannel0.Sample(iChannel0Sampler, Input.Texture);

#ifdef    ENABLE_ALPHA_TEST
	clip(Texel.a == 0 ? -1 : +1);
#endif // ENABLE_ALPHA_TEST

	return Input.Color * Texel;
}